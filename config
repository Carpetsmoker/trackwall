# Syntax:
# - Comments start with #
# - You can use \ as line continuation characters

#####################
### Basic options ###
#####################

# Used for controlling the server
control-listen 127.0.0.53:23

# Listens on TCP and UDP
dns-listen 127.0.0.53:53

# Forward allowed requests to this nameserver.
# TODO: We should be able to automatically use the correct value from
# /etc/resolv.conf
dns-forward 127.0.1.1:53

# We serve no-op or "surrogate" scripts from a HTTP server
http-listen 127.0.0.53:80
https-listen 127.0.0.53:443

# Root cert
https-cert cert.pem
https-key key.pem

# Run as this user
user _dnsblock

# Chroot directory
chroot /var/run/dnsblock

####################
### Adding hosts ###
####################

# Cache remote hosts files for a week, this is useful for desktops and such
# which may be turned on and off several times a day.
cache-hosts 1w

# The format is:
#   hostlist format url
#
# Where format is any of:
#   plain − One host per line. No comments
#   hosts − /etc/hosts, comments and the destination address are ignored.
#
# Don't worry about duplicates. Only one is host is stored.

# These domains are used for serving malware, phising, and other sneaky shit.
# You probably want to keep them. Many browsers already have some built-in
# protection for this these days, but some extra protection can't hurt.
hostlist plain http://malwaredomains.lehigh.edu/files/justdomains
hostlist hosts http://www.malwaredomainlist.com/hostslist/hosts.txt

# These are a mix of ad domains, malware domains, "shock sites", and other stuff
# that most people don't want to need to visit.
hostlist plain http://pgl.yoyo.org/adservers/serverlist.php?hostformat=plain&showintro=0&mimetype=plaintext 
hostlist hosts http://winhelp2002.mvps.org/hosts.txt
hostlist hosts http://someonewhocares.org/hosts/hosts

host acdn.adnxs.com
regexp ^.*\.symcb\.com$


# vk.nl
# forward  persgroep-ams.gravityrd-services.com
# stackoverflow.com
#forward  ssum-sec.casalemedia.com


# Local file; remember that dnsblock uses chroot()
#hostlist hosts file:///hosts

# If you just want to block a few hosts, you can add rules here as well
#host conservapedia.com

# Or multiple work as well
#host facebook.com twitter.com

# Does a hostlist have hosts you would like to keep? Remove them!
# TODO: Make this a regexp
#unhost www.addthis.com
#unhost str www.addthis.com
#unhost regexp .*addthis\.com$

# Or from a file, same syntax as hostlist (can also be remote)
#unhostlist plain file:///myunhosts

###############################################
### Blocking hosts from regular expressions ###
###############################################

# You can also block hosts with regular expressions.
#
# Note that this is a lot slower than using a static hosts file (which is a
# constant-time map lookup), since we need to iterate over the entire array and
# see if an expression matches on every DNS lookup (we do some caching to speed
# up subsequent lookups though).
#

# Regexps
#regexplist file:///home/martin/regexps

# Or regexps:

regexp ^count(er)?[0-9]+?\.
regexp ^banners?[0-9]+?\.
regexp ^ad(s|srv|serv|serve|server|v|vert)?[0-9]+?\.
#regexp ^clicks?\.
#regexp ^[a-z][0-9]+\.[a-z]\.akamaiedge\.net
#regexp ^[a-z][0-9]+\.[a-z]\.akastream\.net
#regexp ^[a-z][0-9]+\.[a-z]\.akamaitech\.net
#regexp ^[a-z][0-9]+\.[a-z]\.a\.yimg\.com
#regexp ^[a-z][0-9]+\.[a-z]\.ak\.nbci\.com
#regexp ^pub[0-9]\.
#regexp ^stats\.
#regexp ^s[0-9]\.sitemeter\.com
#regexp ^s[0-9]\.cnzz\.com

#regexp ^u.*\.spylog\.com

# domains
#regexp 247realmedia\.com
#regexp \.2o7\.net
#regexp advserv
#regexp adbrite
#regexp adbureau\.net
#regexp adtech\.com$
#regexp casalemedia
#regexp clickbank
#regexp clickzs\.com$
#regexp cybermonitor\.com
#regexp cqcounter\.com
#regexp liveadvert
#regexp dynamic\.dol\.ru
#regexp doubleclick
#regexp erasercash
#regexp fastclick

regexp ^.*\.adhese\.com$
regexp ^.*\.disqus\.com$
regexp ^.*\.facebook\.com$
regexp ^.*\.instagram\.com$
regexp ^.*\.twitter\.com$


#########################
### Surrogate scripts ###
#########################

# Some sites will break when they can't load some JavaScript. It'll error out
# and none of the JavaScript works (which in some cases means the entire site
# stops working).
# To fix this, dnsblock can serve surrogate scripts, the format is simple:
#
#   surrogate domain_regex JavaScript to serve
#
# @@ will be replaced by function(){}

# AddThis
surrogate ^s\d+\.addthis\.com$ \
	addthis={init:@@,layers:@@,toolbox:@@,button:@@,counter:@@}

# Google tag manager
surrogate .*googletag(manager|services)\.com$ \
	var googletag; \
	googletag={ \
	cmd:{push:@@}, enableServices:@@, refresh:@@, defineOutOfPageSlot:@@, \
	setTargeting:@@, display:@@, setRefreshUnfilledSlots:@@, \
	enableAsyncRendering:@@, enableSyncRendering:@@, enableSingleRequest:@@, \
	collapseEmptyDivs:@@, defineSlot:function(){return googletag}, \
	addService:function(){return googletag}, companionAds:function(){return \
	googletag}, pubads:function(){return googletag}}
